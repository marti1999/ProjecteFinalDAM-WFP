<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:desktopapplication"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:View="clr-namespace:desktopapplication.View"  
        xmlns:wpfx="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:ViewModel="clr-namespace:desktopapplication.ViewModel"
        xmlns:p="clr-namespace:desktopapplication.Properties"
        xmlns:properties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
        x:Class="desktopapplication.MainWindow"
        mc:Ignorable="d"

        Title="MainWindow" Height="600" Width="1080" Foreground="White" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="panelLeft">
                <EasingDoubleKeyFrame KeyTime="0" Value="57"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="170"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="panelLeft">
                <EasingDoubleKeyFrame KeyTime="0" Value="170"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="57"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />

    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
    </Window.Triggers>

    <Window.DataContext>
        <ViewModel:Vista1ViewModel/>
    </Window.DataContext>



    <Grid>
        <Grid Background="#FFE5E5E5" x:Name="GridMain" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="509" Width="1015">
            <TabControl  Background="#FFE5E5E5" TabStripPlacement="Top" SelectedIndex="{Binding SelectedTab}" Height="509" VerticalAlignment="Top" HorizontalAlignment="Left" Width="1015" BorderBrush="#FFE5E5E5"  >
                <TabItem Header="Donors" Visibility="Visible" >
                    <Grid Background="#FFE5E5E5" HorizontalAlignment="Left" Width="953" Margin="28,0,0,-22" Height="503" VerticalAlignment="Top"  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <materialDesign:Card
                           
                                 Height="298"  Background="White" HorizontalAlignment="Right" Width="571" Margin="-9,10,-86,0" >
                                <StackPanel Margin="0,0,0,-14">

                                </StackPanel>
                            </materialDesign:Card>
                            <DataGrid CanUserAddRows="False" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="272" Margin="0,24,-166,0" VerticalAlignment="Top" Width="642" ItemsSource="{Binding Donors}" SelectedItem="{Binding DonorSelected}" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Id}" ClipboardContentBinding="{x:Null}" Header="Id" Width="50"/>
                                    <DataGridTextColumn Binding="{Binding dni}" ClipboardContentBinding="{x:Null}" Header="DNI" Width="*"/>
                                    <DataGridTextColumn Binding="{Binding name}" ClipboardContentBinding="{x:Null}" Header="{x:Static p:Resources.Name}" Width="*"/>
                                    <DataGridTextColumn Binding="{Binding lastName}" ClipboardContentBinding="{x:Null}" Header="{x:Static p:Resources.lastName}" Width="*"/>
                                    <DataGridTextColumn Binding="{Binding email}" ClipboardContentBinding="{x:Null}" Header="Email" Width="*"/>
                                    <DataGridTextColumn Binding="{Binding ammountGiven}" ClipboardContentBinding="{x:Null}" Header="{x:Static p:Resources.amountGiven}" Width="*"/>
                                    <DataGridCheckBoxColumn Binding="{Binding active}" ClipboardContentBinding="{x:Null}" Header="{x:Static p:Resources.active}" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button Content="{x:Static p:Resources.Delete}" BorderThickness="0,1,1,1" Background="#596673" BorderBrush="#00673AB7"  Command="{Binding deleteDonorCommand}" HorizontalAlignment="Left" Margin="10,361,0,0" VerticalAlignment="Top" Width="75"/>
                        </Grid>
                        <Grid Grid.Column="1" >
                            <materialDesign:Card
                           
                            Height="349"  Background="White" HorizontalAlignment="Right" Width="269" Margin="0,10,10,0" >
                                <StackPanel Margin="0,0,0,-14">

                                </StackPanel>
                            </materialDesign:Card>
                            <TextBox
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.Name}"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="218,83,172,381" Text="{Binding DonorName}" />
                            <TextBox
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.lastName}"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="349,83,41,381" Text="{Binding DonorLastName}" />
                            <TextBox
                                materialDesign:HintAssist.Hint="Email"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="218,144,41,320" Text="{Binding DonorEmail}" />

                            <DatePicker
                                materialDesign:HintAssist.Hint="{x:Static p:Resources.BirthDate}"
                                Style="{StaticResource MaterialDesignFloatingHintDatePicker}" Margin="218,210,182,264" Text="{Binding DonorBirthDate , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <ToggleButton
                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                ToolTip="MaterialDesignSwitchToggleButton"
                                IsChecked="{Binding DonorActive}" Margin="388,210,41,267" 
                                />
                            <Label Content="{x:Static p:Resources.active}" HorizontalAlignment="Left" Margin="334,209,0,0" VerticalAlignment="Top"/>

                        </Grid>
                        <Button Content="{x:Static p:Resources.saveChanges}" BorderThickness="0,1,1,1" Background="#596673" BorderBrush="#00673AB7"  Command="{Binding DonorUpdateCommand}" HorizontalAlignment="Left" Margin="214,316,0,0" VerticalAlignment="Top" Width="226" Grid.Column="1"/>

                    </Grid>
                </TabItem>
                <TabItem Header="Requestor" Visibility="Visible">

                    <Grid Background="#FFE5E5E5">
                        <materialDesign:Card
                           
                                 Height="340"  Background="White" HorizontalAlignment="Right" Width="819" Margin="0,10,161,0" >
                            <StackPanel Margin="0,0,0,0">

                            </StackPanel>
                        </materialDesign:Card>

                        <DataGrid HorizontalAlignment="Left" Margin="29,21,0,131" Width="654" ItemsSource="{Binding Requestors}" IsReadOnly="True" AutoGenerateColumns="False" SelectedItem="{Binding SelectedRequestor}" SelectedIndex="{Binding SelectedRequestorIndex}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Id}" ClipboardContentBinding="{x:Null}" Header="Id"/>
                                <DataGridTextColumn Binding="{Binding dni}" ClipboardContentBinding="{x:Null}" Header="DNI" Width="*"/>
                                <DataGridTextColumn Binding="{Binding name}" ClipboardContentBinding="{x:Null}" Header="Name" Width="*"/>
                                <DataGridTextColumn Binding="{Binding lastName}" ClipboardContentBinding="{x:Null}" Header="LastName" Width="*"/>
                                <DataGridTextColumn Binding="{Binding active}" ClipboardContentBinding="{x:Null}" Header="Active" Width="*"/>
                                <DataGridTextColumn Binding="{Binding email}" ClipboardContentBinding="{x:Null}" Header="Email" Width="*"/>
                                <DataGridTextColumn Binding="{Binding MaxClaim.value}" ClipboardContentBinding="{x:Null}" Header="MaxClaims"/>
                                <DataGridTextColumn Binding="{Binding dateCreated}" ClipboardContentBinding="{x:Null}" Header="DateCreated" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button
                            Command="{Binding DenyRequestorChecked}"
                            HorizontalAlignment="Left"
                            Width="170"
                            Height="Auto"
                            BorderThickness="0,1,1,1" Padding="0" Background="#596673" BorderBrush="#00673AB7" Margin="732,298,0,140" IsEnabled="{Binding ActionsRequestor}">

                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Close" Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="Deny" Visibility="Visible" VerticalAlignment="Center"  Margin="10 10"/>
                            </StackPanel>

                        </Button>

                        <Button
                            Command="{Binding AcceptRequestorChecked}" HorizontalAlignment="Left" Width="170" Height="Auto"
                            BorderThickness="0,1,1,1" Padding="0" Background="#596673" BorderBrush="#00673AB7" Margin="732,348,0,90" IsEnabled="{Binding ActionsRequestor}">

                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Check" Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="Accept" Visibility="Visible" VerticalAlignment="Center"  Margin="10 10"/>
                            </StackPanel>

                        </Button>

                        <ComboBox DisplayMemberPath="reason" ItemsSource="{Binding StatusDisponibles}" SelectedItem="{Binding SelectedStatus}" Margin="735,252,107,201" IsEnabled="{Binding ActionsRequestor}">

                        </ComboBox>
                        <Label Visibility="{Binding EnableHasErrorRequestor}" Foreground="Red" Content="{x:Static p:Resources.ReasonDenyRequestor}" HorizontalAlignment="Left" Margin="735,208,0,0" VerticalAlignment="Top" Width="167"/>

                    </Grid>
                </TabItem>
                <TabItem Header="Clothes" Visibility="Visible" >
                    <Grid Background="#FFE5E5E5"  >





                        <materialDesign:Card
                           
                            Height="421"  Background="White" HorizontalAlignment="Right" Width="415" Margin="0,10,69,0" >
                            <StackPanel Margin="0,0,0,-14">

                            </StackPanel>
                        </materialDesign:Card>
                        <ComboBox Name="classification" HorizontalAlignment="Left" Margin="553,90,0,0" VerticalAlignment="Top" Width="120"
                                  materialDesign:HintAssist.Hint="{x:Static p:Resources.Classification}"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding ClothesClassification}" SelectedItem="{Binding ClothesClassificationSelected}" />
                        <ComboBox Name="size" HorizontalAlignment="Left" Margin="709,90,0,0" VerticalAlignment="Top" Width="94" materialDesign:HintAssist.Hint="{x:Static p:Resources.Size}"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding ClothesSizes}" SelectedItem="{Binding ClothesSizeSelected}"/>
                        <Button HorizontalAlignment="Left" Margin="571,162,0,0" VerticalAlignment="Top" Height="34" Background="SlateGray"  BorderBrush="#FF596673" Command="{Binding clothesSetFemaleCommand}" IsEnabled="{Binding clothesSetFemaleEnabled}">
                            <StackPanel Orientation="Horizontal"  >
                                <materialDesign:PackIcon Kind="GenderFemale" Height="25" Width="25" Margin="0"/>
                            </StackPanel>
                        </Button>
                        <Button HorizontalAlignment="Left" Margin="669,162,0,0" VerticalAlignment="Top" Height="34" Background="SlateGray" BorderBrush="#FF596673" Command="{Binding clothesSetMaleCommand}" IsEnabled="{Binding clothesSetMaleEnabled}">
                            <StackPanel Orientation="Horizontal"  >
                                <materialDesign:PackIcon Kind="GenderMale" Height="25" Width="25" Margin="0"></materialDesign:PackIcon>
                            </StackPanel>
                        </Button>
                        <Button HorizontalAlignment="Left" Margin="764,162,0,0" VerticalAlignment="Top" Height="34" Background="SlateGray" BorderBrush="#FF596673"  Command="{Binding clothesSetOtherCommand}" IsEnabled="{Binding clothesSetOtherEnabled}">
                            <StackPanel Orientation="Horizontal"  >
                                <materialDesign:PackIcon Kind="GenderMaleFemale" Height="25" Width="25" Margin="0"/>
                            </StackPanel>
                        </Button>


                        <wpfx:ColorPicker Name="ColorPicker1" DisplayColorAndName="false" Margin="571,226,188,224"   StandardColors="{Binding ColorList}" AvailableColors="{Binding ColorList}" ShowStandardColors="False" AdvancedButtonHeader="" ShowAdvancedButton="False" SelectedColor="{Binding SelectedColorRaw}"/>
                        <ComboBox HorizontalAlignment="Left" Margin="576,267,0,0" VerticalAlignment="Top" Width="245"
                                  materialDesign:HintAssist.Hint="{x:Static p:Resources.donor}" IsEnabled="{Binding IsClothesDonate}"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}" SelectedItem="{Binding ClothnesDonorSelected}" ItemsSource="{Binding ClothesDonors}">

                        </ComboBox>
                        <Button HorizontalAlignment="Left" Margin="560,370,0,0" VerticalAlignment="Top" Width="131" Command="{Binding createClothCommand}" Height="39"
                                Content="{x:Static p:Resources.registerCloth}"
                                Background="#596673" BorderBrush="#596673" IsEnabled="{Binding IsClothesDonate}">

                        </Button>
                        <materialDesign:Card Margin="15,0,0,28" Background="White" HorizontalAlignment="Left" Width="455" VerticalAlignment="Bottom" Height="433" >
                            <DataGrid CanUserAddRows="False" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="347" VerticalAlignment="Top" Width="445"  ItemsSource="{Binding ClothList}" SelectedItem="{Binding ClothSelected}" IsReadOnly="True" Margin="0,0,-5,0">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Gender.gender1}" ClipboardContentBinding="{x:Null}" Width="*" Header="{x:Static p:Resources.gender}"/>
                                    <DataGridTextColumn Binding="{Binding Classification.classificationType}" ClipboardContentBinding="{x:Null}" Width="*" Header="{x:Static p:Resources.Classification}"/>
                                    <DataGridTextColumn Binding="{Binding Color.name}" ClipboardContentBinding="{x:Null}" Width="*"  Header="Color"/>
                                    <DataGridTextColumn Binding="{Binding Size.size1}" ClipboardContentBinding="{x:Null}" Width="*" Header="{x:Static p:Resources.Size}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </materialDesign:Card>
                        <Label Content="{x:Static p:Resources.donor}" HorizontalAlignment="Left" Margin="591,37,0,0" VerticalAlignment="Top" FontSize="18"/>
                        <Label Content="{x:Static p:Resources.requestor}" HorizontalAlignment="Left" Margin="733,37,0,0" VerticalAlignment="Top" FontSize="18"/>
                        <Button HorizontalAlignment="Left" Margin="709,370,0,0" VerticalAlignment="Top" Width="132" Command="{Binding ClothToRequestor}" Height="39"
                            Content="{x:Static p:Resources.DonateCloth}"
                            Background="#596673" BorderBrush="#596673" IsEnabled="{Binding IsClothClaim}"/>
                        <ComboBox HorizontalAlignment="Left" Margin="576,307,0,0" VerticalAlignment="Top" Width="245"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.requestor}"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}" IsEnabled="{Binding IsClothClaim}" SelectedItem="{Binding ClothesSelectedRequestor}" ItemsSource="{Binding ClothesRequestors}"/>

                        <ToggleButton
                            Style="{StaticResource MaterialDesignSwitchToggleButton}" Margin="651,33,285,409" IsChecked="{Binding IsClothClaim}" Background="#FF596673" Foreground="White">


                        </ToggleButton>
                        <Button HorizontalAlignment="Left" Margin="313,382,0,0" VerticalAlignment="Top" Width="131" Command="{Binding deleteClothCommand}" Height="39"
                            Content="{x:Static p:Resources.Delete}"
                            Background="#596673" BorderBrush="#596673"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Announcements" Visibility="Visible" 
                         >
                    <Grid Background="#FFE5E5E5"  >

                        <materialDesign:Card
                           
                            Height="385"  Background="White" HorizontalAlignment="Right" Width="425" Margin="0,10,77,0" >
                            <StackPanel Margin="0,0,0,-14">

                            </StackPanel>

                        </materialDesign:Card>

                        <materialDesign:Card
                           
                            Height="385"  Background="White" HorizontalAlignment="Right" Width="694" Margin="0,10,287,0" >
                            <StackPanel Margin="0,0,0,-14">

                            </StackPanel>
                        </materialDesign:Card>

                        <DataGrid CanUserAddRows="False" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="374" Margin="28,21,0,0"
                                  VerticalAlignment="Top" Width="404" ItemsSource="{Binding Announcements}"
                                    materialDesign:DataGridAssist.CellPadding="13 8 8 8"
  materialDesign:DataGridAssist.ColumnHeaderPadding="8" IsReadOnly="True">
                            <DataGrid.Columns>

                                <DataGridTextColumn Binding="{Binding title}"  Header="{x:Static p:Resources.Title}" Width="*"/>
                                <DataGridTextColumn Binding="{Binding message}" Header="{x:Static p:Resources.Message}" Width="*"/>
                                <DataGridTextColumn Binding="{Binding dateCreated.Date.Date}"  Header="{x:Static p:Resources.Date}" Width="*"/>

                            </DataGrid.Columns>
                        </DataGrid>

                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.announcementTitle}" Text="{Binding AnnouncementTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="528,50,348,392" />


                        <ComboBox HorizontalAlignment="Left" Margin="528,108,0,0" VerticalAlignment="Top" Width="120" ItemsSource="{Binding AnnouncementType}" SelectedItem="{Binding SelectedRecipient}"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Recipient}" >

                        </ComboBox>
                        <Button BorderThickness="0,1,1,1" Background="#596673" BorderBrush="#00673AB7" Content="{x:Static p:Resources.send}" HorizontalAlignment="Left" Margin="541,293,0,0" VerticalAlignment="Top" Width="277" Command="{Binding createAnnouncementCommand}" Height="48" FontSize="20" />
                        <ComboBox HorizontalAlignment="Left" Margin="707,108,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding AnnouncementLanguage}" 
                                  materialDesign:HintAssist.Hint="{x:Static p:Resources.Language}" >
                            <ComboBoxItem Content="English" HorizontalAlignment="Left" Width="118"/>
                            <ComboBoxItem Content="Català" HorizontalAlignment="Left" Width="118"/>
                            <ComboBoxItem Content="Castellano"/>
                        </ComboBox>

                        <TextBox
                            Text="{Binding AnnouncementMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Margin="528,161,182,0"
                            VerticalAlignment="Top"
                            Height="90"
                            AcceptsReturn="True"
                            TextWrapping="Wrap"
                            VerticalScrollBarVisibility="Auto"
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.announcementMessage}"
                            />

                    </Grid>
                </TabItem>
                <TabItem Header="Rewards" Visibility="Visible">
                    <Grid Background="#FFE5E5E5">
                        <materialDesign:Card
                           
                            Height="421"  Background="White" HorizontalAlignment="Right" Width="687" Margin="0,10,293,0" >
                            <StackPanel Margin="0,0,0,-14">

                            </StackPanel>
                        </materialDesign:Card>
                        <DataGrid HorizontalAlignment="Left" Height="354" Margin="29,21,0,0" VerticalAlignment="Top" Width="390" ItemsSource="{Binding ListRewards}" IsReadOnly="True" SelectedItem="{Binding SelectedReward}" SelectedIndex="{Binding SelectedIndexReward}" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Id}" ClipboardContentBinding="{x:Null}" Header="Id" Width="50"/>
                                <DataGridTextColumn Binding="{Binding neededPoints}" ClipboardContentBinding="{x:Null}" Header="Needed points" Width="*"/>
                                <DataGridTextColumn Binding="{Binding dateCreated}" ClipboardContentBinding="{x:Null}" Header="Date created" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Price}" Text="{Binding TbPriceRewards, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="525,78,267,364" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Title}" Text="{Binding TbRewardsEN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="525,153,267,289" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Description}" Text="{Binding TbDescRewardsEN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="764,153,28,289" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Title}" Text="{Binding TbRewardsCA, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="525,236,267,206" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Description}" Text="{Binding TbDescRewardsCA, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="764,236,28,206" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Title}" Text="{Binding TbRewardsES, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="525,318,267,124" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Description}" Text="{Binding TbDescRewardsES, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="764,318,28,124" />
                        <Label Content="EN" HorizontalAlignment="Left" Margin="525,122,0,0" VerticalAlignment="Top"/>
                        <Label Content="CA" HorizontalAlignment="Left" Margin="525,205,0,0" VerticalAlignment="Top"/>
                        <Label Content="ES" HorizontalAlignment="Left" Margin="525,287,0,0" VerticalAlignment="Top"/>
                        <Button BorderThickness="0,1,1,1" Background="#596673" BorderBrush="#00673AB7" Content="{x:Static p:Resources.Update}" HorizontalAlignment="Left" Margin="684,375,0,0" VerticalAlignment="Top" Width="140" Height="39" Command="{Binding ActualitarRewardBtnCmd}"/>
                        <Button BorderThickness="0,1,1,1" Background="#596673" BorderBrush="#00673AB7" Content="{x:Static p:Resources.Insert}" HorizontalAlignment="Left" Margin="525,375,0,0" VerticalAlignment="Top" Width="140" Height="39" Command="{Binding InsertRewardBtnCmd}"/>
                        <Button BorderThickness="0,1,1,1" Background="#596673" BorderBrush="#00673AB7" Content="{x:Static p:Resources.Delete}" HorizontalAlignment="Left" Margin="841,375,0,0" VerticalAlignment="Top" Width="140" Height="39" Command="{Binding DeleteRewardBtnCmd}"/>

                    </Grid>
                </TabItem>
                <TabItem Header="Warehouses" Visibility="Visible">
                    <Grid>

                        <materialDesign:Card
                           
                            Height="461"  Background="White" HorizontalAlignment="Right" Width="690" Margin="0,10,291,0" >
                            <StackPanel Margin="0,0,0,-14">

                            </StackPanel>
                        </materialDesign:Card>

                        <materialDesign:Card
                           
                            Height="456"  Background="White" HorizontalAlignment="Right" Width="474" Margin="0,10,10,0" >
                            <StackPanel Margin="0,0,0,-14">

                            </StackPanel>
                        </materialDesign:Card>

                        <!--<StackPanel  Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <StackPanel  Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,50,0"/>
                            <StackPanel  Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="50,0,0,0"/>

                        </StackPanel>-->
                        <DataGrid Margin="28,21,583,232" ItemsSource="{Binding WarehouseList}" SelectedItem="{Binding WarehouseSelected}" IsReadOnly="True" />
                        <DataGrid Margin="526,18,152,255" ItemsSource="{Binding AdministratorsWarehouse}" IsReadOnly="True"  />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.City}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="43,313,774,126" Text="{Binding WarehouseEditing.city}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.PostalCode}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="277,313,634,126" Text="{Binding WarehouseEditing.postalCode}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Street}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="43,377,774,62" Text="{Binding WarehouseEditing.street}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.StreetNumber}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="277,377,634,62" Text="{Binding WarehouseEditing.number}" />
                        <TextBox 
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Name}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="43,267,634,172" Text="{Binding WarehouseEditing.name}" />
                        <Button Content="{x:Static p:Resources.Update}" HorizontalAlignment="Left" Margin="43,434,0,0" VerticalAlignment="Top" Width="101" Command="{Binding warehouseEditCommand}"/>
                        <Button Content="{x:Static p:Resources.Insert}" HorizontalAlignment="Left" Margin="274,434,0,0" VerticalAlignment="Top" Width="101" Command="{Binding warehouseAddCommand}"/>
                        <TextBox
                            materialDesign:HintAssist.Hint="Email"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="539,251,278,188" Text="{Binding AdministratorEditing.email}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Name}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="760,251,151,188" Text="{Binding AdministratorEditing.name}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.Password}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="539,298,278,141" Text="{Binding AdministratorEditing.password}" />
                        <TextBox
                            materialDesign:HintAssist.Hint="{x:Static p:Resources.WorkerCode}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="760,301,151,138" Text="{Binding AdministratorEditing.workerCode}" />
                        <Label Content="{x:Static p:Resources.isSuperAdmin}" HorizontalAlignment="Left" Margin="538,377,0,0" VerticalAlignment="Top"/>

                        <ToggleButton
                            Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding AdministratorEditing.isSuper}" Background="#FF596673" Foreground="White" Height="39" Width="73" Margin="673,374,263,68"/>
                        <Button Content="{x:Static p:Resources.Insert}" HorizontalAlignment="Left" Margin="770,377,0,0" VerticalAlignment="Top" Width="101" Command="{Binding administratorAddCommand}"/>
                        <Button Content="Assign" HorizontalAlignment="Left" Margin="875,151,0,0" VerticalAlignment="Top" Width="101" Command="{Binding administratorReassignCommand}"/>

                        <ComboBox HorizontalAlignment="Left" Margin="875,86,0,0" VerticalAlignment="Top" Width="101"
                                  materialDesign:HintAssist.Hint=""
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding Administrators}" SelectedItem="{Binding AdministratorComboBoxSelected}" />

                    </Grid>

                </TabItem>


            </TabControl>
        </Grid>

        <DockPanel Name="panelTop" VerticalAlignment="Top" LastChildFill="False" Background="#596673" Margin="57,0,0,0" Height="60">
            <TextBlock HorizontalAlignment="Center" FontSize="18"  Width="956" FlowDirection="RightToLeft" TextAlignment="Center" Margin="0,18"><Run Text="{x:Static p:Resources.RobaSegonaMa}"/></TextBlock>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" FlowDirection="RightToLeft" Width="55" >
                <materialDesign:PopupBox PlacementMode="BottomAndAlignRightEdges" StaysOpen="False" Margin="10">
                    <StackPanel Width="150">
                        <Button Width="150" Command="{Binding ChangeLangCmd}" CommandParameter="en">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="25px" Source="../CustomResources/ukFlag.jpg" />
                                <Label Content="{x:Static p:Resources.English}"/>
                            </StackPanel>
                        </Button>
                        <Button Width="150" Command="{Binding ChangeLangCmd}" CommandParameter="es">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="25px" Source="/CustomResources/espFlag.jpg" />
                                <Label Content="{x:Static p:Resources.Spanish}"/>
                            </StackPanel>
                        </Button>
                        <Button Width="150" Command="{Binding ChangeLangCmd}" CommandParameter="ca">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="25px" Source="/CustomResources/catFlag.jpg" />
                                <Label Content="{x:Static p:Resources.Catalan}"/>
                            </StackPanel>
                        </Button>
                        <Separator/>
                        <Button Content="Exit" Command="{Binding closeApplication}"/>
                    </StackPanel>
                </materialDesign:PopupBox>
            </StackPanel>
        </DockPanel>

        <DockPanel Name="panelLeft" HorizontalAlignment="Left" Height="569" LastChildFill="False" VerticalAlignment="Top" Width="57" Background="SlateGray">
            <StackPanel>
                <Grid Height="60" Background="#596673" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Button x:Name="ButtonOpenMenu" Height="60" Width="50" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Top"  Background="{x:Null}" BorderBrush="{x:Null}" Foreground="AntiqueWhite" Click="ButtonOpenMenu_Click"
                            >
                        <materialDesign:PackIcon Kind="Menu" Width="25" Height="25" Foreground="White"/>
                    </Button>
                    <Button x:Name="ButtonCloseMenu" Visibility="Collapsed" Height="60" Width="50" Margin="5" HorizontalAlignment="Right" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="AntiqueWhite" Click="ButtonCloseMenu_Click">
                        <materialDesign:PackIcon Kind="ArrowLeft" Width="25" Height="25" Foreground="White"/>
                    </Button>

                </Grid>
                <ListView x:Name="ListViewMenu" Foreground="AntiqueWhite" Background="SlateGray" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderBrush="{x:Null}" Margin="0,25,0,0">
                    <ListViewItem x:Name="itemWarehouses" Height="60">

                        <Button
                            Command="{Binding requestorReqClickCommand}"
                            HorizontalAlignment="Left"
                            Width="170"
                            Height="60"
                             BorderThickness="0,1,1,1" Padding="0" Background="#00673AB7" BorderBrush="#00673AB7" >

                            <StackPanel Orientation="Horizontal" Width="170">
                                <materialDesign:PackIcon Kind="Account" Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="{x:Static p:Resources.requestor}" Visibility="Visible" VerticalAlignment="Center"  Margin="20 10"/>
                            </StackPanel>

                        </Button>

                    </ListViewItem>
                    <ListViewItem x:Name="itemUsers" Height="60" >

                        <Button
                            Command="{Binding usersClickCommand}"
                            HorizontalAlignment="Left"
                            Width="170"
                            Height="60"
                             BorderThickness="0,1,1,1" Padding="0" Background="#00673AB7" BorderBrush="#00673AB7" >

                            <StackPanel Orientation="Horizontal" Width="170" >
                                <materialDesign:PackIcon Kind="Plus" Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="{x:Static p:Resources.donor}" Visibility="Visible" VerticalAlignment="Center"  Margin="20 10"/>
                            </StackPanel>

                        </Button>
                    </ListViewItem>

                    <ListViewItem x:Name="itemClothes" Height="60"  >


                        <Button
                            Command="{Binding clothesClickCommand}"
                            HorizontalAlignment="Left"
                            Width="170"
                            Height="60"
                             BorderThickness="0,1,1,1" Padding="0" Background="#00673AB7" BorderBrush="#00673AB7" >

                            <StackPanel Orientation="Horizontal" Width="170">
                                <materialDesign:PackIcon Kind="TshirtCrew"  Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="{x:Static p:Resources.clothes}" Visibility="Visible" VerticalAlignment="Center"  Margin="20 10"/>
                            </StackPanel>

                        </Button>
                    </ListViewItem>
                    <ListViewItem x:Name="itemNotifications" Height="60">

                        <Button
                            Command="{Binding announcementsClickCommand}"
                            HorizontalAlignment="Left"
                            Width="170"
                            Height="60"
                             BorderThickness="0,1,1,1" Padding="0" Background="#00673AB7" BorderBrush="#00673AB7" >

                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Message" Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="{x:Static p:Resources.Announcements}" Visibility="Visible" VerticalAlignment="Center"  Margin="20 10"/>
                            </StackPanel>

                        </Button>

                    </ListViewItem>
                    <ListViewItem Height="60">
                        <Button
                            Command="{Binding rewardsClickCommand}"
                           HorizontalAlignment="Left"
                            Width="170"
                           Height="60"
                             BorderThickness="0,1,1,1" Padding="0" Background="#00673AB7" BorderBrush="#00673AB7" >

                            <StackPanel Orientation="Horizontal" Width="170">
                                <materialDesign:PackIcon Kind="Gift" Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="{x:Static p:Resources.rewards}" Visibility="Visible" VerticalAlignment="Center"  Margin="20 10"/>
                            </StackPanel>

                        </Button>



                    </ListViewItem>
                    <ListViewItem Height="60">
                        <Button
                            Command="{Binding warehouseClickCommand}"
                           HorizontalAlignment="Left"
                            Width="170"
                           Height="60"
                             BorderThickness="0,1,1,1" Padding="0" Background="#00673AB7" BorderBrush="#00673AB7" >

                            <StackPanel Orientation="Horizontal" Width="170">
                                <materialDesign:PackIcon Kind="Home" Height="25" Width="25" Margin="10"/>
                                <TextBlock Text="{x:Static p:Resources.Warehouses}" Visibility="Visible" VerticalAlignment="Center"  Margin="20 10"/>
                            </StackPanel>

                        </Button>



                    </ListViewItem>
                </ListView>
            </StackPanel>

        </DockPanel>
    </Grid>
</Window>
